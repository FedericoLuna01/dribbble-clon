generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String?   @unique
  emailVerified  DateTime?
  image          String    @default("/default-avatar.png")
  hashedPassword String?
  description    String    @default("Bienvenidos a mi perfil!")
  contact        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoritesId    String[]  @default([])
  likesId        String[]  @default([])
  role           Role      @default(USER)

  accounts Account[]
  posts    Post[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  title       String
  description String
  image       String
  web         String
  repo        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  likes       Int      @default(0)

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

enum Role {
  USER
  ADMIN
}
